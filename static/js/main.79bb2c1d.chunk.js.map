{"version":3,"sources":["components/GeneralInfo.js","components/GeneralInfoForm.js","components/Skills.js","components/XDeleteButton.js","components/SkillsForm.js","components/Experiences.js","components/ExperiencesForm.js","components/Educations.js","components/EducationsForm.js","components/CV.js","App.js","reportWebVitals.js","index.js"],"names":["GeneralInfo","props","generalInfo","changeEditMode","id","className","fullName","href","email","phoneNumber","type","onClick","GeneralInfoForm","useState","inputs","setInputs","handleInputChange","e","target","name","value","onSubmit","preventDefault","htmlFor","maxLength","required","pattern","onChange","Skills","skills","skillsListItems","map","skill","pluralize","length","XDeleteButton","classesProp","onClickProp","icon","faTimesCircle","size","defaultProps","setSkills","skillInputs","index","placeholder","skillId","filter","concat","nanoid","Experiences","experiences","formatDateForDisplay","experiencesListItems","experience","companyName","positionTitle","date","from","toPresent","to","mainTasks","mainTask","description","ExperiencesForm","setExperiences","experienceId","mainTaskId","checked","datePropNames","includes","Date","formatDateForForm","isoDateNow","toISOString","split","experienceInputs","mainTasksInputs","undefined","max","disabled","Educations","educations","educationsListItems","education","school","title","EducationsForm","setEducations","educationId","educationInputs","CV","setGeneralInfo","editModes","setEditModes","section","editMode","format","formatISO","representation","err","newGeneralInfo","SkillsForm","newSkills","newExperiences","newEducations","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79bb2c1d.chunk.js","sourcesContent":["function GeneralInfo(props) {\n\tconst { generalInfo, changeEditMode } = props;\n\n\treturn (\n\t\t<section id=\"GeneralInfo\">\n\t\t\t<address>\n\t\t\t\t<header>\n\t\t\t\t\t<h2 className=\"h1\">{generalInfo.fullName}</h2>\n\t\t\t\t</header>\n\t\t\t\t<a href={`mailto:${generalInfo.email}`} className=\"d-inline-block mb-1\">\n\t\t\t\t\t{generalInfo.email}\n\t\t\t\t</a>\n\t\t\t\t<p>{generalInfo.phoneNumber}</p>\n\t\t\t</address>\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclassName=\"btn btn-warning edit-btn\"\n\t\t\t\tonClick={() => changeEditMode('generalInfo', true)}\n\t\t\t>\n\t\t\t\tEdit\n\t\t\t</button>\n\t\t</section>\n\t);\n}\n\nexport default GeneralInfo;\n","import React, { useState } from 'react';\n\nconst GeneralInfoForm = (props) => {\n\tconst [inputs, setInputs] = useState(props.generalInfo);\n\n\tconst handleInputChange = (e) => {\n\t\tconst target = e.target;\n\t\tconst name = target.name;\n\t\tconst value = target.value;\n\t\tsetInputs({ ...inputs, [name]: value });\n\t};\n\n\tconst handleCancelEdit = () => {\n\t\tprops.changeEditMode('generalInfo', false);\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tprops.onSubmit(inputs);\n\t\tprops.changeEditMode('generalInfo', false);\n\t};\n\n\tconst { fullName, email, phoneNumber } = inputs;\n\n\treturn (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<div className=\"form-group\">\n\t\t\t\t<label htmlFor=\"fullName\">Full Name</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\tid=\"fullName\"\n\t\t\t\t\tname=\"fullName\"\n\t\t\t\t\tvalue={fullName}\n\t\t\t\t\tmaxLength=\"255\"\n\t\t\t\t\trequired\n\t\t\t\t\tpattern=\"^.*[\\S].*$\"\n\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"form-group\">\n\t\t\t\t<label htmlFor=\"email\">Email</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\tid=\"email\"\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tmaxLength=\"255\"\n\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"form-group\">\n\t\t\t\t<label htmlFor=\"phoneNumber\">Phone Number</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"tel\"\n\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\tid=\"phoneNumber\"\n\t\t\t\t\tname=\"phoneNumber\"\n\t\t\t\t\tvalue={phoneNumber}\n\t\t\t\t\tmaxLength=\"20\"\n\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\trequired\n\t\t\t\t\tpattern=\"^.*[\\S].*$\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\tUpdate\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclassName=\"btn btn-secondary ml-2\"\n\t\t\t\tonClick={handleCancelEdit}\n\t\t\t>\n\t\t\t\tCancel\n\t\t\t</button>\n\t\t</form>\n\t);\n};\n\nexport default GeneralInfoForm;\n","import pluralize from 'pluralize';\n\nfunction Skills(props) {\n\tconst { skills, changeEditMode } = props;\n\tconst skillsListItems = skills.map((skill) => {\n\t\treturn (\n\t\t\t<li key={skill.id} className=\"skills-list-item\">\n\t\t\t\t{skill.name}\n\t\t\t</li>\n\t\t);\n\t});\n\n\treturn (\n\t\t<section>\n\t\t\t<header>\n\t\t\t\t<h2 className=\"dd-h2 mb-4\">{pluralize('Skill', skills.length)}</h2>\n\t\t\t</header>\n\t\t\t<ul className=\"skills-list\">{skillsListItems}</ul>\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclassName=\"btn btn-warning edit-btn\"\n\t\t\t\tonClick={() => changeEditMode('skills', true)}\n\t\t\t>\n\t\t\t\tEdit\n\t\t\t</button>\n\t\t</section>\n\t);\n}\n\nexport default Skills;\n","import '../styles/XDeleteButton.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\n\nfunction XDeleteButton(props) {\n\tconst { classesProp, onClickProp } = props;\n\n\treturn (\n\t\t<button\n\t\t\ttype=\"button\"\n\t\t\tclassName={`delete-btn cursor-pointer text-danger${\n\t\t\t\tclassesProp ? ' ' + classesProp : classesProp\n\t\t\t}`}\n\t\t\tonClick={onClickProp}\n\t\t>\n\t\t\t<FontAwesomeIcon\n\t\t\t\ticon={faTimesCircle}\n\t\t\t\tsize=\"2x\"\n\t\t\t\tclassName=\"pointer-events-none\"\n\t\t\t/>\n\t\t</button>\n\t);\n}\n\nXDeleteButton.defaultProps = {\n\tclassesProp: '',\n};\n\nexport default XDeleteButton;\n","import React, { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport pluralize from 'pluralize';\n\nimport XDeleteButton from './XDeleteButton';\n\nfunction GeneralInfoForm(props) {\n\tconst [skills, setSkills] = useState(props.skills);\n\n\tconst handleInputChange = (skillId, e) => {\n\t\tconst target = e.target;\n\t\tconst name = target.name;\n\t\tconst value = target.value;\n\t\tsetSkills(\n\t\t\tskills.map((skill) => {\n\t\t\t\tif (skill.id !== skillId) {\n\t\t\t\t\treturn skill;\n\t\t\t\t} else {\n\t\t\t\t\treturn { ...skill, [name]: value };\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t};\n\n\tconst handleSkillDelete = (skillId) => {\n\t\tsetSkills(skills.filter((skill) => skill.id !== skillId));\n\t};\n\n\tconst handleAddSkillInput = () => {\n\t\tsetSkills(skills.concat({ id: nanoid(), name: '' }));\n\t};\n\n\tconst handleCancelEdit = () => {\n\t\tprops.changeEditMode('skills', false);\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tprops.onSubmit(skills);\n\t\tprops.changeEditMode('skills', false);\n\t};\n\n\tconst skillInputs = skills.map((skill, index) => {\n\t\treturn (\n\t\t\t<div className=\"form-group d-flex align-items-center\" key={skill.id}>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\tname=\"name\"\n\t\t\t\t\tvalue={skill.name}\n\t\t\t\t\tplaceholder=\"Add your skill\"\n\t\t\t\t\tmaxLength=\"255\"\n\t\t\t\t\trequired\n\t\t\t\t\tpattern=\"^.*[\\S].*$\"\n\t\t\t\t\tonChange={(e) => handleInputChange(skill.id, e)}\n\t\t\t\t/>\n\t\t\t\t<XDeleteButton\n\t\t\t\t\tclassesProp={'ml-2'}\n\t\t\t\t\tonClickProp={() => handleSkillDelete(skill.id)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t});\n\n\treturn (\n\t\t<div>\n\t\t\t<header>\n\t\t\t\t<h2 className=\"dd-h2 mb-4\">{pluralize('Skill', skills.length)}</h2>\n\t\t\t</header>\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t{skillInputs}\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"btn btn-dark d-block mb-4\"\n\t\t\t\t\tonClick={handleAddSkillInput}\n\t\t\t\t>\n\t\t\t\t\tAdd new skill\n\t\t\t\t</button>\n\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\tUpdate\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclassName=\"btn btn-secondary ml-2\"\n\t\t\t\t\tonClick={handleCancelEdit}\n\t\t\t\t>\n\t\t\t\t\tCancel\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nexport default GeneralInfoForm;\n","import pluralize from 'pluralize';\n\nfunction Experiences(props) {\n\tconst { experiences, changeEditMode, formatDateForDisplay } = props;\n\tconst experiencesListItems = experiences.map((experience) => {\n\t\treturn (\n\t\t\t<li key={experience.id} className=\"dd-li\">\n\t\t\t\t<p className=\"mb-1\">\n\t\t\t\t\t<span className=\"font-weight-bold\">{experience.companyName}</span> -{' '}\n\t\t\t\t\t<span className=\"dd-user-title\">{experience.positionTitle}</span>\n\t\t\t\t</p>\n\t\t\t\t<p className=\"from-to-date\">\n\t\t\t\t\t<span>{formatDateForDisplay(experience.date.from)}</span> -{' '}\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{experience.date.toPresent\n\t\t\t\t\t\t\t? 'Present'\n\t\t\t\t\t\t\t: formatDateForDisplay(experience.date.to)}\n\t\t\t\t\t</span>\n\t\t\t\t</p>\n\t\t\t\t<ul>\n\t\t\t\t\t{experience.mainTasks.map((mainTask) => {\n\t\t\t\t\t\treturn <li key={mainTask.id}>{mainTask.description}</li>;\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</li>\n\t\t);\n\t});\n\n\treturn (\n\t\t<section>\n\t\t\t<header>\n\t\t\t\t<h2 className=\"dd-h2\">{pluralize('Experience', experiences.length)}</h2>\n\t\t\t</header>\n\t\t\t<ul className=\"dd-ul\">{experiencesListItems}</ul>\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclassName=\"btn btn-warning edit-btn\"\n\t\t\t\tonClick={() => changeEditMode('experiences', true)}\n\t\t\t>\n\t\t\t\tEdit\n\t\t\t</button>\n\t\t</section>\n\t);\n}\n\nexport default Experiences;\n","import React, { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport pluralize from 'pluralize';\n\nimport XDeleteButton from './XDeleteButton';\n\nconst ExperiencesForm = (props) => {\n\tconst [experiences, setExperiences] = useState(props.experiences);\n\n\tconst handleInputChange = (experienceId, mainTaskId, e) => {\n\t\tconst target = e.target;\n\t\tconst name = target.name;\n\t\tconst value = target.type === 'checkbox' ? target.checked : target.value;\n\t\tconst datePropNames = ['from', 'to', 'toPresent'];\n\t\tsetExperiences(\n\t\t\texperiences.map((experience) => {\n\t\t\t\tif (experience.id !== experienceId) {\n\t\t\t\t\treturn experience;\n\t\t\t\t} else {\n\t\t\t\t\tif (datePropNames.includes(name)) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...experience,\n\t\t\t\t\t\t\tdate: {\n\t\t\t\t\t\t\t\t...experience.date,\n\t\t\t\t\t\t\t\t[name]: name === 'toPresent' ? value : new Date(value),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if (mainTaskId) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...experience,\n\t\t\t\t\t\t\tmainTasks: experience.mainTasks.map((mainTask) => {\n\t\t\t\t\t\t\t\tif (mainTask.id !== mainTaskId) {\n\t\t\t\t\t\t\t\t\treturn mainTask;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn { ...mainTask, [name]: value };\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn { ...experience, [name]: value };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t};\n\n\tconst handleExperienceDelete = (experienceId) => {\n\t\tsetExperiences(\n\t\t\texperiences.filter((experience) => {\n\t\t\t\treturn experience.id !== experienceId;\n\t\t\t})\n\t\t);\n\t};\n\n\tconst handleAddExperienceInput = () => {\n\t\tsetExperiences(\n\t\t\texperiences.concat({\n\t\t\t\tid: nanoid(),\n\t\t\t\tcompanyName: '',\n\t\t\t\tpositionTitle: '',\n\t\t\t\tdate: {\n\t\t\t\t\tfrom: '',\n\t\t\t\t\tto: '',\n\t\t\t\t\ttoPresent: false,\n\t\t\t\t},\n\t\t\t\tmainTasks: [{ id: nanoid(), description: '' }],\n\t\t\t})\n\t\t);\n\t};\n\n\tconst handleAddMainTask = (experienceId) => {\n\t\tsetExperiences(\n\t\t\texperiences.map((experience) => {\n\t\t\t\tif (experience.id !== experienceId) {\n\t\t\t\t\treturn experience;\n\t\t\t\t} else {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...experience,\n\t\t\t\t\t\tmainTasks: experience.mainTasks.concat({\n\t\t\t\t\t\t\tid: nanoid(),\n\t\t\t\t\t\t\tdescription: '',\n\t\t\t\t\t\t}),\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t};\n\n\tconst handleDeleteMainTask = (experienceId, mainTaskId) => {\n\t\tsetExperiences(\n\t\t\texperiences.map((experience) => {\n\t\t\t\tif (experience.id !== experienceId) {\n\t\t\t\t\treturn experience;\n\t\t\t\t} else {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...experience,\n\t\t\t\t\t\tmainTasks: experience.mainTasks.filter((mainTask) => {\n\t\t\t\t\t\t\treturn mainTask.id !== mainTaskId;\n\t\t\t\t\t\t}),\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t};\n\n\tconst handleCancelEdit = () => {\n\t\tprops.changeEditMode('experiences', false);\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tprops.onSubmit(\n\t\t\texperiences.map((experience) => {\n\t\t\t\treturn {\n\t\t\t\t\t...experience,\n\t\t\t\t\tdate: {\n\t\t\t\t\t\t...experience.date,\n\t\t\t\t\t\tto: experience.date.toPresent ? undefined : experience.date.to,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t\tprops.changeEditMode('experiences', false);\n\t};\n\n\tconst { formatDateForForm } = props;\n\tconst isoDateNow = new Date().toISOString().split('T')[0];\n\tconst experienceInputs = experiences.map((experience) => {\n\t\tconst mainTasksInputs = experience.mainTasks.map((mainTask, index) => {\n\t\t\treturn (\n\t\t\t\t<div className=\"form-row mb-3\" key={mainTask.id}>\n\t\t\t\t\t<div className=\"col-11\">\n\t\t\t\t\t\t<label htmlFor={`${mainTask.id}-mainTaskDescription`}>\n\t\t\t\t\t\t\t{`Main Task #${index + 1}`}\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tid={`${mainTask.id}-mainTaskDescription`}\n\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\tvalue={mainTask.description}\n\t\t\t\t\t\t\tmaxLength=\"255\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tpattern=\"^.*[\\S].*$\"\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\treturn handleInputChange(experience.id, mainTask.id, e);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-1 d-flex align-items-end\">\n\t\t\t\t\t\t<XDeleteButton\n\t\t\t\t\t\t\tonClickProp={() =>\n\t\t\t\t\t\t\t\thandleDeleteMainTask(experience.id, mainTask.id)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t\treturn (\n\t\t\t<div\n\t\t\t\tkey={experience.id}\n\t\t\t\tclassName=\"mb-2 p-4 border border-light rounded\"\n\t\t\t\tid=\"experienceInputs\"\n\t\t\t>\n\t\t\t\t<XDeleteButton\n\t\t\t\t\tclassesProp={'absTopRight'}\n\t\t\t\t\tonClickProp={() => handleExperienceDelete(experience.id)}\n\t\t\t\t/>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor={`${experience.id}-companyName`}>Company Name</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tid={`${experience.id}-companyName`}\n\t\t\t\t\t\tname=\"companyName\"\n\t\t\t\t\t\tvalue={experience.companyName}\n\t\t\t\t\t\tplaceholder=\"Acme Corporation\"\n\t\t\t\t\t\tmaxLength=\"255\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tpattern=\"^.*[\\S].*$\"\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\treturn handleInputChange(experience.id, undefined, e);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor={`${experience.id}-positionTitle`}>\n\t\t\t\t\t\tPosition Title\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tid={`${experience.id}-positionTitle`}\n\t\t\t\t\t\tname=\"positionTitle\"\n\t\t\t\t\t\tvalue={experience.positionTitle}\n\t\t\t\t\t\tplaceholder=\"Web Developer\"\n\t\t\t\t\t\tmaxLength=\"255\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tpattern=\"^.*[\\S].*$\"\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\treturn handleInputChange(experience.id, undefined, e);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor={`${experience.id}-dateFrom`}>From:</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tid={`${experience.id}-dateFrom`}\n\t\t\t\t\t\tname=\"from\"\n\t\t\t\t\t\tvalue={formatDateForForm(experience.date.from)}\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tmax={isoDateNow}\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\treturn handleInputChange(experience.id, undefined, e);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-row mb-3\">\n\t\t\t\t\t<div className=\"col-10\">\n\t\t\t\t\t\t<label htmlFor={`${experience.id}-dateTo`}>To:</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tid={`${experience.id}-dateTo`}\n\t\t\t\t\t\t\tname=\"to\"\n\t\t\t\t\t\t\tvalue={formatDateForForm(experience.date.to)}\n\t\t\t\t\t\t\tdisabled={experience.date.toPresent}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tmax={isoDateNow}\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\treturn handleInputChange(experience.id, undefined, e);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-2 d-flex align-items-end\">\n\t\t\t\t\t\t<div className=\"form-check mb-2\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\tclassName=\"form-check-input\"\n\t\t\t\t\t\t\t\tid={`${experience.id}-dateToPresent`}\n\t\t\t\t\t\t\t\tname=\"toPresent\"\n\t\t\t\t\t\t\t\tchecked={experience.date.toPresent}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\treturn handleInputChange(experience.id, undefined, e);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\tclassName=\"form-check-label\"\n\t\t\t\t\t\t\t\thtmlFor={`${experience.id}-dateToPresent`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tPresent?\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{mainTasksInputs}\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclassName=\"btn btn-dark\"\n\t\t\t\t\tonClick={() => handleAddMainTask(experience.id)}\n\t\t\t\t>\n\t\t\t\t\tAdd new main task\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t});\n\n\treturn (\n\t\t<div>\n\t\t\t<header>\n\t\t\t\t<h2 className=\"dd-h2\">{pluralize('Experience', experiences.length)}</h2>\n\t\t\t</header>\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t{experienceInputs}\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclassName=\"btn btn-dark d-block mb-4\"\n\t\t\t\t\tonClick={handleAddExperienceInput}\n\t\t\t\t>\n\t\t\t\t\tAdd new experience\n\t\t\t\t</button>\n\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\tUpdate\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclassName=\"btn btn-secondary ml-2\"\n\t\t\t\t\tonClick={handleCancelEdit}\n\t\t\t\t>\n\t\t\t\t\tCancel\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default ExperiencesForm;\n","import pluralize from 'pluralize';\n\nfunction Educations(props) {\n\tconst { educations, changeEditMode, formatDateForDisplay } = props;\n\tconst educationsListItems = educations.map((education) => {\n\t\treturn (\n\t\t\t<li key={education.id} className=\"dd-li\">\n\t\t\t\t<p className=\"mb-1\">\n\t\t\t\t\t<span className=\"font-weight-bold\">{education.school}</span> -{' '}\n\t\t\t\t\t<span className=\"dd-user-title\">{education.title}</span>\n\t\t\t\t</p>\n\n\t\t\t\t<p className=\"from-to-date\">\n\t\t\t\t\t<span>{formatDateForDisplay(education.date.from)}</span> -{' '}\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{education.date.toPresent\n\t\t\t\t\t\t\t? 'Present'\n\t\t\t\t\t\t\t: formatDateForDisplay(education.date.to)}\n\t\t\t\t\t</span>\n\t\t\t\t</p>\n\t\t\t</li>\n\t\t);\n\t});\n\n\treturn (\n\t\t<section>\n\t\t\t<header>\n\t\t\t\t<h2 className=\"dd-h2\">{pluralize('Education', educations.length)}</h2>\n\t\t\t</header>\n\t\t\t<ul className=\"dd-ul\">{educationsListItems}</ul>\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclassName=\"btn btn-warning edit-btn\"\n\t\t\t\tonClick={() => changeEditMode('educations', true)}\n\t\t\t>\n\t\t\t\tEdit\n\t\t\t</button>\n\t\t</section>\n\t);\n}\n\nexport default Educations;\n","import React, { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport pluralize from 'pluralize';\n\nimport XDeleteButton from './XDeleteButton';\n\nconst EducationsForm = (props) => {\n\tconst [educations, setEducations] = useState(props.educations);\n\n\tconst handleInputChange = (educationId, e) => {\n\t\tconst target = e.target;\n\t\tconst name = target.name;\n\t\tconst value = target.type === 'checkbox' ? target.checked : target.value;\n\t\tconst datePropNames = ['from', 'to', 'toPresent'];\n\t\tsetEducations(\n\t\t\teducations.map((education) => {\n\t\t\t\tif (education.id !== educationId) {\n\t\t\t\t\treturn education;\n\t\t\t\t} else {\n\t\t\t\t\tif (datePropNames.includes(name)) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...education,\n\t\t\t\t\t\t\tdate: {\n\t\t\t\t\t\t\t\t...education.date,\n\t\t\t\t\t\t\t\t[name]: name === 'toPresent' ? value : new Date(value),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn { ...education, [name]: value };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t};\n\n\tconst handleEducationDelete = (educationId) => {\n\t\tsetEducations(\n\t\t\teducations.filter((education) => {\n\t\t\t\treturn education.id !== educationId;\n\t\t\t})\n\t\t);\n\t};\n\n\tconst handleAddEducationInput = () => {\n\t\tsetEducations(\n\t\t\teducations.concat({\n\t\t\t\tid: nanoid(),\n\t\t\t\tschool: '',\n\t\t\t\ttitle: '',\n\t\t\t\tdate: {\n\t\t\t\t\tfrom: '',\n\t\t\t\t\tto: '',\n\t\t\t\t\ttoPresent: false,\n\t\t\t\t},\n\t\t\t})\n\t\t);\n\t};\n\n\tconst handleCancelEdit = () => {\n\t\tprops.changeEditMode('educations', false);\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tprops.onSubmit(\n\t\t\teducations.map((education) => {\n\t\t\t\treturn {\n\t\t\t\t\t...education,\n\t\t\t\t\tdate: {\n\t\t\t\t\t\t...education.date,\n\t\t\t\t\t\tto: education.date.toPresent ? undefined : education.date.to,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t\tprops.changeEditMode('educations', false);\n\t};\n\n\tconst { formatDateForForm } = props;\n\tconst isoDateNow = new Date().toISOString().split('T')[0];\n\tconst educationInputs = educations.map((education) => {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tkey={education.id}\n\t\t\t\tclassName=\"mb-2 p-4 border border-light rounded\"\n\t\t\t\tid=\"educationInputs\"\n\t\t\t>\n\t\t\t\t<XDeleteButton\n\t\t\t\t\tclassesProp={'absTopRight'}\n\t\t\t\t\tonClickProp={() => handleEducationDelete(education.id)}\n\t\t\t\t/>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor={`${education.id}-school`}>School</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tid={`${education.id}-school`}\n\t\t\t\t\t\tname=\"school\"\n\t\t\t\t\t\tvalue={education.school}\n\t\t\t\t\t\tmaxLength=\"255\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tpattern=\"^.*[\\S].*$\"\n\t\t\t\t\t\tonChange={(e) => handleInputChange(education.id, e)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor={`${education.id}-title`}>Title</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tid={`${education.id}-title`}\n\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\tvalue={education.title}\n\t\t\t\t\t\tmaxLength=\"255\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tpattern=\"^.*[\\S].*$\"\n\t\t\t\t\t\tonChange={(e) => handleInputChange(education.id, e)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor={`${education.id}-dateFrom`}>From:</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tid={`${education.id}-dateFrom`}\n\t\t\t\t\t\tname=\"from\"\n\t\t\t\t\t\tvalue={formatDateForForm(education.date.from)}\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tmax={isoDateNow}\n\t\t\t\t\t\tonChange={(e) => handleInputChange(education.id, e)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-row mb-3\">\n\t\t\t\t\t<div className=\"col-10\">\n\t\t\t\t\t\t<label htmlFor={`${education.id}-dateTo`}>To:</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tid={`${education.id}-dateTo`}\n\t\t\t\t\t\t\tname=\"to\"\n\t\t\t\t\t\t\tvalue={formatDateForForm(education.date.to)}\n\t\t\t\t\t\t\tdisabled={education.date.toPresent}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tmax={isoDateNow}\n\t\t\t\t\t\t\tonChange={(e) => handleInputChange(education.id, e)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-2 d-flex align-items-end\">\n\t\t\t\t\t\t<div className=\"form-check mb-2\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\tclassName=\"form-check-input\"\n\t\t\t\t\t\t\t\tid={`${education.id}-dateToPresent`}\n\t\t\t\t\t\t\t\tname=\"toPresent\"\n\t\t\t\t\t\t\t\tchecked={education.date.toPresent}\n\t\t\t\t\t\t\t\tonChange={(e) => handleInputChange(education.id, e)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\tclassName=\"form-check-label\"\n\t\t\t\t\t\t\t\thtmlFor={`${education.id}-dateToPresent`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tPresent?\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t});\n\n\treturn (\n\t\t<div>\n\t\t\t<header>\n\t\t\t\t<h2 className=\"dd-h2\">{pluralize('Education', educations.length)}</h2>\n\t\t\t</header>\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t{educationInputs}\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclassName=\"btn btn-dark d-block mb-4\"\n\t\t\t\t\tonClick={handleAddEducationInput}\n\t\t\t\t>\n\t\t\t\t\tAdd new education\n\t\t\t\t</button>\n\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\n\t\t\t\t\tUpdate\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclassName=\"btn btn-secondary ml-2\"\n\t\t\t\t\tonClick={handleCancelEdit}\n\t\t\t\t>\n\t\t\t\t\tCancel\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default EducationsForm;\n","import React, { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { format, formatISO } from 'date-fns';\nimport '../styles/CV.css';\n\nimport GeneralInfo from './GeneralInfo';\nimport GeneralInfoForm from './GeneralInfoForm';\nimport Skills from './Skills';\nimport SkillsForm from './SkillsForm';\nimport Experiences from './Experiences';\nimport ExperiencesForm from './ExperiencesForm';\nimport Educations from './Educations';\nimport EducationsForm from './EducationsForm';\n\nconst CV = (props) => {\n\tconst [generalInfo, setGeneralInfo] = useState({\n\t\tfullName: 'Mark Edward Ratio',\n\t\temail: 'markedwardratio@gmail.com',\n\t\tphoneNumber: '092929xxxxx',\n\t});\n\n\tconst [skills, setSkills] = useState([\n\t\t{ id: nanoid(), name: 'HTML' },\n\t\t{ id: nanoid(), name: 'CSS' },\n\t\t{ id: nanoid(), name: 'JavaScript' },\n\t\t{ id: nanoid(), name: 'React' },\n\t\t{ id: nanoid(), name: 'Node.js' },\n\t\t{ id: nanoid(), name: 'Express.js' },\n\t\t{ id: nanoid(), name: 'Ruby' },\n\t\t{ id: nanoid(), name: 'Ruby on Rails' },\n\t\t{ id: nanoid(), name: 'Sass' },\n\t\t{ id: nanoid(), name: 'Bootstrap' },\n\t\t{ id: nanoid(), name: 'Git' },\n\t\t{ id: nanoid(), name: 'Jest' },\n\t]);\n\n\tconst [experiences, setExperiences] = useState([\n\t\t{\n\t\t\tid: nanoid(),\n\t\t\tcompanyName: 'NAPOLCOM, Quezon City',\n\t\t\tpositionTitle: 'IT Officer (OJT)',\n\t\t\tdate: {\n\t\t\t\tfrom: new Date('2018-11-01'),\n\t\t\t\tto: new Date('2019-03-01'),\n\t\t\t\ttoPresent: false,\n\t\t\t},\n\t\t\tmainTasks: [\n\t\t\t\t{\n\t\t\t\t\tid: nanoid(),\n\t\t\t\t\tdescription:\n\t\t\t\t\t\t'Diagnose and troubleshoot software, hardware and network related problems',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: nanoid(),\n\t\t\t\t\tdescription:\n\t\t\t\t\t\t'Handle calls from the employee about their technical problems',\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t]);\n\n\tconst [educations, setEducations] = useState([\n\t\t{\n\t\t\tid: nanoid(),\n\t\t\tschool: 'STI Novaliches',\n\t\t\ttitle: 'Bachelor of Science in Information Technology',\n\t\t\tdate: {\n\t\t\t\tfrom: new Date('2015-06-01'),\n\t\t\t\tto: new Date('2019-04-01'),\n\t\t\t\ttoPresent: false,\n\t\t\t},\n\t\t},\n\t]);\n\n\tconst [editModes, setEditModes] = useState({\n\t\tgeneralInfo: false,\n\t\tskills: false,\n\t\texperiences: false,\n\t\teducations: false,\n\t});\n\n\tconst changeEditMode = (section, editMode) => {\n\t\tsetEditModes({ ...editModes, [section]: editMode });\n\t};\n\n\tconst handleGeneralInfoUpdate = (newGeneralInfo) => {\n\t\tconst { fullName, email, phoneNumber } = newGeneralInfo;\n\t\tsetGeneralInfo({ fullName, email, phoneNumber });\n\t};\n\n\tconst handleSkillsUpdate = (newSkills) => {\n\t\tsetSkills(newSkills);\n\t};\n\n\tconst handleExperiencesUpdate = (newExperiences) => {\n\t\tsetExperiences(newExperiences);\n\t};\n\n\tconst handleEducationsUpdate = (newEducations) => {\n\t\tsetEducations(newEducations);\n\t};\n\n\tconst formatDateForDisplay = (date) => {\n\t\treturn format(date, 'MMMM d, yyyy');\n\t};\n\n\tconst formatDateForForm = (date) => {\n\t\ttry {\n\t\t\treturn !date ? '' : formatISO(date, { representation: 'date' });\n\t\t} catch (err) {\n\t\t\treturn '';\n\t\t}\n\t};\n\n\treturn (\n\t\t<article id=\"CV\" className=\"col-md-8 p-5 bg-white box-shadow\">\n\t\t\t{editModes.generalInfo ? (\n\t\t\t\t<GeneralInfoForm\n\t\t\t\t\tgeneralInfo={generalInfo}\n\t\t\t\t\tchangeEditMode={changeEditMode}\n\t\t\t\t\tonSubmit={handleGeneralInfoUpdate}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<GeneralInfo\n\t\t\t\t\tgeneralInfo={generalInfo}\n\t\t\t\t\tchangeEditMode={changeEditMode}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<hr />\n\t\t\t{editModes.skills ? (\n\t\t\t\t<SkillsForm\n\t\t\t\t\tskills={skills}\n\t\t\t\t\tchangeEditMode={changeEditMode}\n\t\t\t\t\tonSubmit={handleSkillsUpdate}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<Skills skills={skills} changeEditMode={changeEditMode} />\n\t\t\t)}\n\t\t\t<hr />\n\t\t\t{editModes.experiences ? (\n\t\t\t\t<ExperiencesForm\n\t\t\t\t\texperiences={experiences}\n\t\t\t\t\tchangeEditMode={changeEditMode}\n\t\t\t\t\tonSubmit={handleExperiencesUpdate}\n\t\t\t\t\tformatDateForForm={formatDateForForm}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<Experiences\n\t\t\t\t\texperiences={experiences}\n\t\t\t\t\tchangeEditMode={changeEditMode}\n\t\t\t\t\tformatDateForDisplay={formatDateForDisplay}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<hr />\n\t\t\t{editModes.educations ? (\n\t\t\t\t<EducationsForm\n\t\t\t\t\teducations={educations}\n\t\t\t\t\tchangeEditMode={changeEditMode}\n\t\t\t\t\tonSubmit={handleEducationsUpdate}\n\t\t\t\t\tformatDateForForm={formatDateForForm}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<Educations\n\t\t\t\t\teducations={educations}\n\t\t\t\t\tchangeEditMode={changeEditMode}\n\t\t\t\t\tformatDateForDisplay={formatDateForDisplay}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</article>\n\t);\n};\n\nexport default CV;\n","import CV from './components/CV';\n\nfunction App() {\n\treturn (\n\t\t<main>\n\t\t\t<div className=\"container my-4\">\n\t\t\t\t<div className=\"row justify-content-center\">\n\t\t\t\t\t<CV />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</main>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport './index.css';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}